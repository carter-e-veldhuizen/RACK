
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DesCert Ontology
// Copyright 2021. Honeywell International and SRI International.

// namespace and imports
uri "http://arcos.descert/SRI" alias DesCert.
import "http://arcos.rack/PROV-S".
import "http://arcos.rack/DOCUMENT".
import "http://arcos.rack/SYSTEM".
import "http://arcos.rack/SOFTWARE".
import "http://arcos.rack/REQUIREMENTS".
// import "http://arcos.rack/REVIEW".
import "http://arcos.rack/TESTING".
import "http://arcos.rack/HAZARD".
import "http://arcos.rack/ANALYSIS".
import "http://arcos.rack/PROCESS".
import "http://arcos.rack/AGENTS".
import "http://arcos.rack/MODEL".
// import "http://common/DO-178C".
import "http://arcos.AH-64D/Boeing".


//AM 
// In SRI_Tool, dropped 2 lines on toolQualificationData as we have 
//		wasQualifiedBy: TOOL -> ENTITY
//		dropped toolSummaryDescription as existing "description" property can be used
// rename xx to be something like PropertyBasedAnalysisOutput? 
//		do we need analysisDiagnostics?
// goalProperty: move to core ontology?
// verificationOjective: looks like an Objective? then move verificationObjective to core as parentObjective
// dropped testVectorFile as definedIn from the core ontology can be used. 
//		Is testVectorFile used in the Boeing instance data. 
// We could introduce a subClass and then define testEnvironment on it OR maybe we could move testEnvironment to core and make it more specific than string? 
// we think some of the properties on tools should instead be properties on activity that is using the tool

SRI_Tool is a type of TOOL.
       toolInstallationConfiguration describes SRI_Tool with values of type string.
       toolInstallationConfiguration describes SRI_Tool with at most 1 value.
//       toolSummaryDescription (note "concise description of tool function, inputs, outputs") describes SRI_Tool with a single value of type string.
       userGuide describes SRI_Tool with values of type DOCUMENT. 
//       toolQualificationData describes SRI_Tool with values of type ToolQualificationData.
//       toolQualificationData describes SRI_Tool with at most 1 value.

ToolQualificationData
        (note "tool qualification evidence including tool qualification plan, tool operational requirements, and tool verification procedures")
      is a type of ENTITY.
       toolQualificationSummary (note "summary of tool qualification argument and roadmap of artifacts") describes ToolQualificationData with values of type string.
       toolQualificationSummary describes ToolQualificationData with at most 1 value.
       toolQualificationArtifacts (note "consist of multiple documents") describes ToolQualificationData with values of type DOCUMENT.
     
     ////////////////////////////////////////////////
     // Analysis and properties

xx is a type of ANALYSIS_OUTPUT.      
      analysisDiagnostics (note "counter examples, other diagnostics") describes xx with values of type string.  
      goalProperty (note "SpecificProperty or GenericProperty that is the objective of analysis") describes xx with values of type GenericProperty.
      
      GenericProperty is a type of OBJECTIVE. //ENTITY. //AM 9/27/2021: altered
        propertyScope (note "entity(ies) over which this property must hold; e.g., a model, a requirement set, code, etc.") describes GenericProperty with values of type ENTITY.
        propertyScope is a type of wasImpactedBy.
        DesCert:mitigates (note "a hazard (if any) the property mitigates; GenericProperty typically doesn't mitigate any specific hazard") describes GenericProperty with values of type HAZARD.
        DesCert:mitigates is a type of wasImpactedBy.
        verificationObjective (note "") describes GenericProperty with values of type ENTITY //AM 9/27/2021: do we need to alter this?
        .
     
      SpecificProperty is a type of GenericProperty.
         propertyBasis (note "entity impacting the property definition - e.g. SystemconOps") describes SpecificProperty with values of type ENTITY.
         propertyBasis is a type of wasImpactedBy.
         // NOTE: a SpecificProperty is modeled by entities such as SallyPropertyModel; that's where the property text is contained
         
     ////////////////////////////////////////////////
     // System architecture and analysis     
     
     RadlNotation (note "RADL notation for architecture specification") is a type of ENTITY.
        userGuide describes RadlNotation with values of type DOCUMENT.
        semantics describes RadlNotation with values of type DOCUMENT.
        
     RadlArchitectureModel (note "The model of architecture in Radl") is a type of MODEL.
        radlArchitectureNotation describes RadlArchitectureModel with a single value of type RadlNotation. 
        radlArchitectureNotation is a type of wasImpactedBy.
        radlSpecification (note "the Radl specification text") describes RadlArchitectureModel with a single value of type string.
        models of RadlArchitectureModel only has values of type SystemArchitecture.

      RadlGenericProperty is a type of GenericProperty.
        propertyScope of RadlGenericProperty only has values of type RadlArchitectureModel.
      
      RadlerArchitectureAnalysis (note "Analysis done by Radler tool on Radl architecture specificaton (SystemArchitecture)") is a type of ANALYSIS.
        analysisInput of RadlerArchitectureAnalysis only has values of type {RadlArchitectureModel or RadlGenericProperty}. 
      
      ///////////////////////////////////////////////////
      // System, Software requirements, design, code   
       
      ClearNotation (note "CLEAR notation for writing requirements") is a type of ENTITY. 
        userGuide describes ClearNotation with values of type DOCUMENT.
        semantics describes ClearNotation with values of type DOCUMENT.
          
      DesCertRequirementModel (note "The model of requirement in DesCert in CLEAR notation") is a type of MODEL.
        requirementNotation describes DesCertRequirementModel with a single value of type ClearNotation. 
        requirementNotation is a type of wasImpactedBy.
        requirementText describes DesCertRequirementModel with a single value of type string. //AM is this needed???
        models of DesCertRequirementModel only has values of type {SoftwareHighLevelRequirement or SoftwareLowLevelRequirement}.

      SourceCode is a type of FILE.
        wasGeneratedBy of SourceCode only has values of type SoftwareCoding.
        
      ObjectFile is a type of FILE.
        wasGeneratedBy of ObjectFile only has values of type SoftwareIntegration.
  
      DataDictionary is a type of DATA_DICTIONARY_TERM.
        wasGeneratedBy of DataDictionary only has values of type SoftwareHighLevelRequirementsDefinition.

      ExecutableObject is a type of FILE.
        wasGeneratedBy of ExecutableObject only has values of type SoftwareIntegration.
      
      ///////////////////////////////////////////
      // Analysis done by Sally tool
      
      SallyTransitionSystemModel is a type of ENTITY.
        sallyModelContents describes SallyTransitionSystemModel with values of type FILE.
        sallyModelNotation describes SallyTransitionSystemModel with a single value of type SallyNotation. 
        sallyModelNotation is a type of wasImpactedBy.
      
      SallyTransitionSystemModelGeneration is a type of ACTIVITY.
        used of SallyTransitionSystemModelGeneration only has values of type SoftwareHighLevelRequirementSet.       
        toolParameters (note "all parameters/options used to run the tool") describes SallyTransitionSystemModelGeneration with values of type string.
        toolUsed (note "the tool that is invoked") describes SallyTransitionSystemModelGeneration with a single value of type TOOL.
        toolUsed is a type of wasAttributedTo. //AM alter maybe wasPerformedBy
        invokedBy (note "person or DevOps invoking the tool") describes SallyTransitionSystemModelGeneration with values of type AGENT.
        invokedBy is a type of wasAttributedTo.
      
      SallyModelChecking is a type of ANALYSIS.  //AM 9/27/2021 should this be an ACTIVITY instead?
		analysisInput describes SallyModelChecking with values of type ENTITY. //AM  alter ENTITY?
        analysisInput of SallyModelChecking only has values of type {SallyTransitionSystemModel or SpecificProperty}.        
        toolParamaters (note "all parameters/options used to run the tool") describes SallyTransitionSystemModelGeneration with values of type string.
      
      SallyNotation (note "Sally notation for creating models and property queries") is a type of ENTITY.
        userGuide describes SallyNotation with values of type DOCUMENT.
        semantics describes SallyNotation with values of type DOCUMENT.
      
      SallyPropertyModel (note "the MODEL class that is used to model a SpecificProperty") is a type of MODEL.
        sallyPropertyNotation describes SallyPropertyModel with a single value of type SallyNotation. 
        sallyPropertyNotation is a type of wasImpactedBy.
        sallyPropertySpecification (note "the property content/text") describes SallyPropertyModel with a single value of type string.
        models of SallyPropertyModel only has values of type SpecificProperty. 

       /////////////////////////////////////////////////////////////////////////
       // Test Oracle and Test generation by Text2Test tool from CLEAR requirements
       
       ClearTestAndOracleGeneration is a type of TEST_DEVELOPMENT.
        used of ClearTestAndOracleGeneration only has values of type {SoftwareHighLevelRequirementSet or SoftwareLowLevelRequirementSet or DataDictionary}.
         
       ClearTestingTheory is a type of ENTITY. 
          testingTheoryDoc describes ClearTestingTheory with values of type DOCUMENT. 
         
       TestOracle is a type of ENTITY.
         verifiesRequirement describes TestOracle with a single value of type REQUIREMENT.
         verifiesRequirement is a type of wasDerivedFrom.
         requirementSubclause (note "part (subclause) of the requirement this test oracle tests") describes TestOracle with values of type string.
         testOracleCriteria (note "e.g., equiv class, boundary value") describes TestOracle with a single value of type string.
         testOracleTheory describes TestOracle with a single value of type ClearTestingTheory.

//AM dropped testVectorFile as definedIn from the core ontology can be used.         
//       definedIn (note "file containing tests in format of test vectors") describes TEST with a single value of type FILE.

//AM We could introduce a subClass and then define testEnvironment on it but maybe we could move testEnvironment to core and make it more specific than string?       
       testEnvironment (note "test environment description, configuration parameters") describes TEST_EXECUTION with values of type string.
       testEnvironment describes TEST_EXECUTION with at most 1 value.             
       
       ///////////////////////////////////////////////////////////////////////
       // Requirement analysis by Text2Test tool from CLEAR requirements
       
       ClearGenericProperty is a type of GenericProperty.
        propertyScope of ClearGenericProperty only has values of type {SoftwareHighLevelRequirementSet or SoftwareLowLevelRequirementSet or DataDictionary}. 

       RequirementAnalysis is a type of ANALYSIS.
       
       ////////////////////////////////
       // Test generation by Randoop tool
       
       RandoopJUnitTestGeneration is a type of TEST_DEVELOPMENT.
        used of RandoopJUnitTestGeneration only has values of type SourceCode.
       
       RandoopTestsAndMetrics
          (note "the set of JUNIT tests/results generated and executed by Randoop with corresponding test clasification metrics")
       is a type of ENTITY.
        totalNumberOfTestCases (note "size of test set") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfRegressionTestCases (note "tests that pass on the code and should continue to pass on regressions") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfViolationInducingTestCases (note "tests that indicate a method contract violation") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfReducedViolationInducingTestCases (note "numberOfViolationInducingTestCases reduced by filtering out redundant test cases in the same equivalance class") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfErrorRevealingTestCases (note "tests that were determined to reveal actual errors in code") describes RandoopTestsAndMetrics with a single value of type int.
        jUnitTestFile describes RandoopTestsAndMetrics with values of type FILE.
        DesCert:producedBy describes RandoopTestsAndMetrics with values of type RandoopJUnitTestGeneration.
        DesCert:producedBy is a type of wasGeneratedBy.
        DesCert:verifies describes RandoopTestsAndMetrics with values of type SourceCode.
        DesCert:verifies is a type of wasImpactedBy.
        
        /////////////////////////////////////////////
        // Invariant detection by Daikon
        DaikonInvariantDetection is a type of ACTIVITY.
        toolParamaters (note "all parameters/options used to run the tool") describes DaikonInvariantDetection with values of type string.
        toolUsed (note "the tool that is invoked") describes DaikonInvariantDetection with a single value of type TOOL.
        toolUsed is a type of wasAttributedTo. //AM 9/27/2021: alter maybe wasPerformedBy
        invokedBy (note "person or DevOps invoking the tool") describes DaikonInvariantDetection with values of type AGENT.
        invokedBy is a type of wasAttributedTo.
        used of DaikonInvariantDetection only has values of type {SourceCode or RandoopTestsAndMetrics}. 
          
        DaikonInvariantOutput is a type of ENTITY.
          DesCert:verifies describes DaikonInvariantOutput with values of type SourceCode.
          DesCert:producedBy describes DaikonInvariantOutput with values of type DaikonInvariantDetection.
          DesCert:producedBy describes DaikonInvariantOutput with at most 1 value.
          invariantCount describes DaikonInvariantOutput with a single value of type int.
          classesCount describes DaikonInvariantOutput with a single value of type int.
          testsCount describes DaikonInvariantOutput with a single value of type int.
          supportFiles describes DaikonInvariantOutput with values of type FILE.
          testDriver describes DaikonInvariantOutput with values of type FILE.
          likelyInvariants describes DaikonInvariantOutput with values of type SpecificProperty.
        
        LikelyInvariantModel (note "model of invariant detected by Daikon") is a type of MODEL.
          invariantSpecification (note "the likely invariant text") describes LikelyInvariantModel with a single value of type string.
          models of LikelyInvariantModel only has values of type SpecificProperty.
